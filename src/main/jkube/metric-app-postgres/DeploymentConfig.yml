metadata:
  name: metrics-app-postgres
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - spring-boot
        from:
          kind: ImageStreamTag
          namespace: launcher-infra
          name: 'spring-integration-sample:latest'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/launcher-infra/spring-integration-sample@sha256:224f6e6caa13b497f69e3e5718968949606e4e711365e48050a50c41596f4724
  replicas: 2
  revisionHistoryLimit: 2
  test: false
  selector:
    app: metrics-app-postgres
    group: metrics-app-postgres
    provider: jkube
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: metrics-app-postgres
        group: metrics-app-postgres
        provider: jkube
        version: 0.0.1-SNAPSHOT
      annotations:
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-uri: 'https://github.com/kevbrain/spring-integration.git'
        jkube.io/git-branch: main
        jkube.io/git-commit: 79dfd687060d97234589db4b54a230a7330ba395
        jkube.io/git-url: 'https://github.com/kevbrain/spring-integration.git'
        jkube.io/scm-tag: HEAD
        jkube.io/scm-url: >-
          https://github.com/spring-projects/spring-boot/spring-integration-sample
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: spring-boot
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: METRICS_CONTEXT_CLASSPATH
              value: /metrics/resources/
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: 'my-kafka-cluster-kafka-bootstrap.amq.svc.cluster.local:9092'
            - name: KAFKA_CONSUMER_TOPIC
              value: metrics-data
            - name: KAFKA_PRODUCER_TOPIC
              value: metrics-data
            - name: METRICS_DATASOURCE_DIALECT_CLASS
              value: org.hibernate.dialect.H2Dialect
            - name: METRICS_DATASOURCE_DRIVER
              value: org.h2.Driver
            - name: METRICS_DATASOURCE_PASSWORD
              value: password
            - name: METRICS_DATASOURCE_URL
              value: 'jdbc:h2:mem:testdb'
            - name: METRICS_DATASOURCE_USERNAME
              value: sa
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          securityContext:
            privileged: false
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: prometheus
              containerPort: 9779
              protocol: TCP
            - name: jolokia
              containerPort: 8778
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/launcher-infra/spring-integration-sample@sha256:224f6e6caa13b497f69e3e5718968949606e4e711365e48050a50c41596f4724
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler