metadata:
  name: metrics-app-mariadb
  labels:
    app.kubernetes.io/part-of: metrics
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - spring-boot
        from:
          kind: ImageStreamTag
          namespace: kafka
          name: 'spring-integration-sample:latest'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/kafka/spring-integration-sample:latest
  replicas: 2
  revisionHistoryLimit: 2
  test: false
  selector:
    app: metrics-app-mariadb
    group: metrics-app
    provider: jkube
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: metrics-app-mariadb
        group: metrics-app
        provider: jkube
        version: 0.0.1-SNAPSHOT
      annotations:
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-uri: 'https://github.com/kevbrain/spring-integration.git'
        jkube.io/git-branch: main
        jkube.io/git-commit: 79dfd687060d97234589db4b54a230a7330ba395
        jkube.io/git-url: 'https://github.com/kevbrain/spring-integration.git'
        jkube.io/scm-tag: HEAD
        jkube.io/scm-url: >-
          https://github.com/spring-projects/spring-boot/spring-integration-sample
    spec:
      volumes:
        - name: mariadb-data
          emptyDir: {}
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: mariadb
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-name
          ports:
            - containerPort: 3306
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: mariadb-data
              mountPath: /var/lib/mysql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/mariadb:latest
        - resources: {}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: spring-boot
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: METRICS_CONTEXT_CLASSPATH
              value: /metrics/resources/
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: 'its4u-kafka-kafka-bootstrap.kafka.svc.cluster.local:9092'
            - name: KAFKA_CONSUMER_TOPIC
              value: metrics-data
            - name: KAFKA_PRODUCER_TOPIC
              value: metrics-data
            - name: METRICS_DATASOURCE_DIALECT_CLASS
              value: org.hibernate.dialect.MariaDB103Dialect
            - name: METRICS_DATASOURCE_DRIVER
              value: org.mariadb.jdbc.Driver
            - name: METRICS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-password
            - name: METRICS_DATASOURCE_URL
              value: 'jdbc:mariadb://localhost:3306/sampledb'
            - name: METRICS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: database-user
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          securityContext:
            privileged: false
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: prometheus
              containerPort: 9779
              protocol: TCP
            - name: jolokia
              containerPort: 8778
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/kafka/spring-integration-sample:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler